name: Build TrollStore

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    # 检出代码和子模块
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'
    
    # 安装编译所需的依赖工具
    - name: Install dependencies
      run: |
        # 安装签名工具
        brew install ldid
        # 安装构建工具
        brew install make
        # 安装加密库
        brew install openssl@3
        # 安装解压缩工具
        brew install libarchive
        # 安装包管理工具
        brew install pkg-config
        
    # 设置 Theos 开发环境
    - name: Setup Theos
      run: |
        # 克隆 Theos 框架
        git clone --recursive https://github.com/theos/theos.git theos
        # 下载 iOS SDK
        curl -LO https://github.com/theos/sdks/archive/master.zip
        unzip master.zip
        mkdir -p theos/sdks
        mv sdks-master/* theos/sdks/
        rm -rf sdks-master master.zip
        
    # 编译 ChOma 工具
    - name: Build ChOma
      run: |
        cd ChOma
        make
        sudo make install
        cd ..
        
    # 编译 Pwnify 注入工具
    - name: Build Pwnify
      run: |
        cd Pwnify
        make
        sudo make install
        cd ..
        
    # 更新源文件中的 URL
    - name: Update Source Files
      run: |
        # 修改共享控制器中的更新地址
        sed -i.bak 's#https://github.com/opa334/TrollStore/releases/latest/download/TrollStore.tar#http://124.70.142.143/releases/latest/download/TrollStore.tar#g' Shared/TSListControllerShared.m
        
        # 修改根视图控制器中的更新地址
        sed -i.bak 's#https://github.com/opa334/TrollStore/releases/latest/download/TrollStore.tar#http://124.70.142.143/releases/latest/download/TrollStore.tar#g' TrollHelper/TSHRootViewController.m
        
    # 准备受害者应用
    - name: Prepare Victim
      run: |
        mkdir -p Victim
        # 下载基础应用用于注入
        curl -L https://github.com/BuLu0208/TrollStore/raw/main/GTA_Car_Tracker.ipa -o Victim/InstallerVictim.ipa
        
    # 主要构建过程
    - name: Build project
      env:
        THEOS: ${{ github.workspace }}/theos
      run: |
        set -e
        # 设置环境变量
        export PATH=$THEOS/bin:$PATH
        export THEOS_DEVICE_IP=127.0.0.1
        export THEOS_PLATFORM=ios
        
        # 构建所有组件
        cd Exploits/fastPathSign
        make
        cd ../..
        
        # 按顺序构建各个模块
        make pre_build                           # 预处理
        make make_roothelper MAKECMDGOALS=all   # 构建 Root 助手
        make make_trollstore MAKECMDGOALS=all   # 构建主程序
        make make_trollhelper_embedded MAKECMDGOALS=all  # 构建嵌入式助手
        make make_trollhelper_package MAKECMDGOALS=all   # 打包助手
        make assemble_trollstore                 # 组装主程序
        make build_installer15                   # 构建 iOS15 安装器
        make build_installer64e                  # 构建 arm64e 安装器
        make make_trollstore_lite MAKECMDGOALS=all      # 构建精简版
        
        # 验证注入结果
        echo "验证注入结果..."
        cd _build
        unzip TrollHelper_iOS15.ipa
        echo "检查是否包含中文界面字符串..."
        otool -v -s __TEXT __cstring Payload/Runner.app/Runner | grep "更多设置" || echo "未找到中文字符串!"
        otool -v -s __TEXT __cstring Payload/Runner.app/Runner | grep "防止同行白嫖" || echo "未找到中文字符串!"
        otool -v -s __TEXT __cstring Payload/Runner.app/Runner | grep "获取密码请联系微信" || echo "未找到中文字符串!"
        cd ..
        
        # 显示构建产物
        ls -l _build/
        
    # 上传构建产物
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: TrollStore-Build
        path: |
          _build/                      # 上传整个 _build 目录
          TrollStore/packages/*.deb    # TrollStore 安装包
          TrollHelper/packages/*.deb   # TrollHelper 安装包
        