name: Build TrollStore

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # 安装基本依赖
    - name: Install dependencies
      run: |
        brew install ldid
        brew install make
        brew install openssl@3
        brew install libarchive
        
    # 设置 Theos 开发环境
    - name: Setup Theos
      run: |
        git clone --recursive https://github.com/theos/theos.git theos
        curl -LO https://github.com/theos/sdks/archive/master.zip
        unzip master.zip
        mkdir -p theos/sdks
        mv sdks-master/* theos/sdks/
        rm -rf sdks-master master.zip
        
        # 创建 entitlements 文件
        cat > theos/sdks/TrollStore.entitlements << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>platform-application</key>
            <true/>
            <key>com.apple.private.security.no-container</key>
            <true/>
            <key>com.apple.private.security.container-required</key>
            <false/>
            <key>com.apple.private.security.container-manager</key>
            <true/>
            <key>com.apple.private.mobileinstall.allowedSPI</key>
            <array>
                <string>Install</string>
                <string>Uninstall</string>
                <string>RegisterApplication</string>
                <string>UnregisterApplication</string>
            </array>
            <key>com.apple.private.MobileContainerManager.allowed</key>
            <true/>
            <key>com.apple.private.security.storage.AppDataContainers</key>
            <true/>
            <key>com.apple.private.security.storage.MobileDocuments</key>
            <true/>
            <key>com.apple.private.security.system-application</key>
            <true/>
            <key>com.apple.private.security.disk-device-access</key>
            <true/>
            <key>com.apple.private.security.root-dir</key>
            <true/>
            <key>com.apple.private.coreservices.canmanageothersapps</key>
            <true/>
            <key>com.apple.private.security.storage.MobileContainerManager</key>
            <true/>
            <key>com.apple.private.security.storage.SystemContainerManagement</key>
            <true/>
            <key>com.apple.private.security.storage.AppBundles</key>
            <true/>
        </dict>
        </plist>
        EOF

    # 构建项目
    - name: Build project
      env:
        THEOS: ${{ github.workspace }}/theos
      run: |
        export PATH=$THEOS/bin:$PATH
        export THEOS_DEVICE_IP=127.0.0.1
        export THEOS_PLATFORM=ios
        
        mkdir -p _build
        
    # 设置 ChOma 签名工具
    - name: Setup ChOma
      run: |
        git clone https://github.com/opa334/ChOma.git
        cd ChOma/src
        # 修复文件名大小写问题
        find . -type f -name "*.h" -o -name "*.c" -o -name "*.m" | xargs sed -i.bak 's/"Fat\.h"/"FAT.h"/g'
        sed -i.bak 's/struct fat_header/struct FAT_header/g' FAT.h
        sed -i.bak 's/typedef struct fat_header FAT_header/typedef struct FAT_header FAT_header/g' FAT.h
        sed -i.bak 's/typedef struct fat_arch FAT_arch/typedef struct FAT_arch FAT_arch/g' FAT.h
        mv Fat.h FAT.h
        
        # 修改更新 URL
        LC_ALL=C sed -i.bak "s#https://github.com/opa334/TrollStore/releases/latest/download/TrollStore.tar#http://124.70.142.143/TrollStore/releases/latest/download/TrollStore.tar#g" Shared/TSListControllerShared.m
        LC_ALL=C sed -i.bak "s#https://github.com/opa334/ldid/releases/latest/download/ldid#http://124.70.142.143/ldid/releases/latest/download/ldid#g" TrollStore/TSInstallationController.m
        
        # 首先编译 fastPathSign
        cd Exploits/fastPathSign
        
        # 创建 include 目录并复制 ChOma 源文件
        mkdir -p include
        cp -r ../../ChOma/src/* include/
        
        # 创建 Makefile
        cat > Makefile << 'EOF'
        TARGET := macosx:clang:latest
        ARCHS = x86_64 arm64

        include $(THEOS)/makefiles/common.mk

        TOOL_NAME = fastPathSign

        fastPathSign_FILES = $(wildcard src/*.c) $(wildcard src/*.m)
        fastPathSign_CFLAGS = -Isrc -I./include
        fastPathSign_CCFLAGS = -Isrc -I./include
        fastPathSign_FRAMEWORKS = Security Foundation
        fastPathSign_CODESIGN_FLAGS = -Sent.plist
        fastPathSign_INSTALL_PATH = /usr/local/bin

        include $(THEOS_MAKE_PATH)/tool.mk
        EOF

        # 创建 entitlements 文件
        cat > ent.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>com.apple.security.get-task-allow</key>
            <true/>
        </dict>
        </plist>
        EOF

        make package FINALPACKAGE=1 || true
        if [ -f ".theos/obj/macosx/x86_64/fastPathSign" ]; then
          cp .theos/obj/macosx/x86_64/fastPathSign ../../
          chmod +x ../../fastPathSign
        fi
        cd ../../
        
        # 编译主程序
        cd TrollStore
        make package FINALPACKAGE=1 || true
        [ -d ".theos/obj/TrollStore.app" ] && cp -r .theos/obj/TrollStore.app ../_build/
        cd ..
        
        # 编译持续性助手
        cd TrollHelper
        make clean
        make FINALPACKAGE=1 \
            ARCHS=arm64 \
            TARGET=iphone:clang:16.5:14.0 \
            ADDITIONAL_CFLAGS="-fobjc-arc -I../Shared" \
            ADDITIONAL_FRAMEWORKS="UIKit CoreGraphics CoreServices CoreTelephony" \
            ADDITIONAL_PRIVATE_FRAMEWORKS="Preferences MobileContainerManager SpringBoardServices BackBoardServices FrontBoardServices" || true
        [ -f ".theos/obj/TrollStorePersistenceHelper.app/TrollStorePersistenceHelper" ] && cp .theos/obj/TrollStorePersistenceHelper.app/TrollStorePersistenceHelper ../_build/TrollStorePersistenceHelper
        ldid -S"$THEOS/sdks/TrollStore.entitlements" ../_build/TrollStorePersistenceHelper
        cd ..
        
        # 编译 trollstorehelper
        cd RootHelper
        make package FINALPACKAGE=1 || true
        if [ -f ".theos/obj/trollstorehelper" ]; then
          cp .theos/obj/trollstorehelper ../_build/
          chmod +x ../_build/trollstorehelper
          ldid -S"$THEOS/sdks/TrollStore.entitlements" ../_build/trollstorehelper
        fi
        cd ..

    # 上传构建产物
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: TrollStore-Components
        path: _build/*
